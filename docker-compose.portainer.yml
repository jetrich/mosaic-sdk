version: '3.8'

# MosAIc Stack - Portainer Deployment
# Designed for deployment in Portainer with bind mounts to /opt/mosaic/
# Environment variables configured in Portainer stack settings

services:
  # PostgreSQL - Shared database cluster
  postgres:
    image: postgres:17.5-alpine
    container_name: mosaicstack-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: gitea_prod,woodpecker_prod,bookstack_prod,plane_prod
    volumes:
      - /opt/mosaic/postgres/data:/var/lib/postgresql/data
      - /opt/mosaic/postgres/init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh:ro
      - /opt/mosaic/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5432:5432"
    networks:
      - mosaicstack-internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis - Session management and caching
  redis:
    image: redis:8.0.3-alpine
    container_name: mosaicstack-redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - /opt/mosaic/redis/data:/data
      - /opt/mosaic/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - mosaicstack-internal
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Gitea - Git repository hosting
  gitea:
    image: gitea/gitea:1.24.3
    container_name: mosaicstack-gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=postgres:5432
      - GITEA__database__NAME=gitea_prod
      - GITEA__database__USER=postgres
      - GITEA__database__PASSWD=${POSTGRES_PASSWORD}
      - GITEA__server__DOMAIN=git.mosaicstack.dev
      - GITEA__server__SSH_DOMAIN=git.mosaicstack.dev
      - GITEA__server__ROOT_URL=https://git.mosaicstack.dev/
      - GITEA__server__SSH_PORT=2222
      - GITEA__server__SSH_LISTEN_PORT=22
      - GITEA__server__DISABLE_SSH=false
      - GITEA__server__START_SSH_SERVER=true
      - GITEA__service__DISABLE_REGISTRATION=${GITEA_DISABLE_REGISTRATION:-true}
      - GITEA__service__REQUIRE_SIGNIN_VIEW=${GITEA_REQUIRE_SIGNIN:-true}
      - GITEA__security__INSTALL_LOCK=true
      - GITEA__log__LEVEL=Info
      - GITEA__session__PROVIDER=redis
      - GITEA__session__PROVIDER_CONFIG=redis://:${REDIS_PASSWORD}@redis:6379/0
      - GITEA__cache__ENABLED=true
      - GITEA__cache__ADAPTER=redis
      - GITEA__cache__HOST=redis://:${REDIS_PASSWORD}@redis:6379/1
    volumes:
      - /opt/mosaic/gitea/data:/data
      - /opt/mosaic/gitea/config:/etc/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "2222:22"
    networks:
      - nginx-proxy-manager_default
      - mosaicstack-internal
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Woodpecker CI/CD Server
  woodpecker-server:
    image: woodpeckerci/woodpecker-server:v3.7.0
    container_name: mosaicstack-woodpecker-server
    environment:
      - WOODPECKER_OPEN=false
      - WOODPECKER_HOST=https://ci.mosaicstack.dev
      - WOODPECKER_GITEA=true
      - WOODPECKER_GITEA_URL=https://git.mosaicstack.dev
      - WOODPECKER_GITEA_CLIENT=${WOODPECKER_GITEA_CLIENT}
      - WOODPECKER_GITEA_SECRET=${WOODPECKER_GITEA_SECRET}
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
      - WOODPECKER_DATABASE_DRIVER=postgres
      - WOODPECKER_DATABASE_DATASOURCE=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/woodpecker_prod?sslmode=disable
      - WOODPECKER_ADMIN=${WOODPECKER_ADMIN:-admin}
      - WOODPECKER_LOG_LEVEL=info
    volumes:
      - /opt/mosaic/woodpecker/data:/var/lib/woodpecker
    ports:
      - "8000:8000"
    networks:
      - nginx-proxy-manager_default
      - mosaicstack-internal
    depends_on:
      postgres:
        condition: service_healthy
      gitea:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Woodpecker CI/CD Agent
  woodpecker-agent:
    image: woodpeckerci/woodpecker-agent:v3.7.0
    container_name: mosaicstack-woodpecker-agent
    environment:
      - WOODPECKER_SERVER=woodpecker-server:9000
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
      - WOODPECKER_MAX_WORKFLOWS=4
      - WOODPECKER_LOG_LEVEL=info
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/mosaic/woodpecker/agent_data:/var/lib/woodpecker
    networks:
      - mosaicstack-internal
    depends_on:
      - woodpecker-server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # BookStack - Documentation
  bookstack:
    image: lscr.io/linuxserver/bookstack:v25.05.2
    container_name: mosaicstack-bookstack
    environment:
      - PUID=1000
      - PGID=1000
      - APP_URL=https://docs.mosaicstack.dev
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_DATABASE=bookstack_prod
      - REDIS_SERVERS=redis:6379:1:${REDIS_PASSWORD}
      - SESSION_DRIVER=redis
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - /opt/mosaic/bookstack/data:/config
    ports:
      - "8080:80"
    networks:
      - nginx-proxy-manager_default
      - mosaicstack-internal
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/status"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Plane.so - Project Management
  plane-web:
    image: makeplane/plane:latest
    container_name: mosaicstack-plane-web
    environment:
      - WEB_URL=https://pm.mosaicstack.dev
      - DEBUG=0
      - NEXT_PUBLIC_API_BASE_URL=https://pm.mosaicstack.dev
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/plane_prod
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/2
      - SECRET_KEY=${PLANE_SECRET_KEY}
      - USE_MINIO=0
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
    volumes:
      - /opt/mosaic/plane/media:/app/media
      - /opt/mosaic/plane/static:/app/static
    ports:
      - "3001:3000"
    networks:
      - nginx-proxy-manager_default
      - mosaicstack-internal
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Plane API Worker
  plane-api:
    image: makeplane/plane:latest
    container_name: mosaicstack-plane-api
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/plane_prod
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/2
      - SECRET_KEY=${PLANE_SECRET_KEY}
      - USE_MINIO=0
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
    volumes:
      - /opt/mosaic/plane/media:/app/media
      - /opt/mosaic/plane/static:/app/static
    networks:
      - mosaicstack-internal
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Networks
networks:
  # Connect to existing nginx proxy manager network
  nginx-proxy-manager_default:
    external: true
  # Internal network for service communication
  mosaicstack-internal:
    driver: bridge
    name: mosaicstack-internal