version: '3.8'

# Gitea Standalone Deployment
# This is for initial Gitea-only deployment before full MosAIc stack
# Compatible with the full mosaicstack but can run independently

networks:
  mosaicstack-internal:
    driver: bridge
    name: mosaicstack-internal

services:
  # PostgreSQL Database for Gitea (standalone)
  postgres:
    image: postgres:17.5-alpine
    container_name: mosaicstack-postgres-gitea
    restart: unless-stopped
    networks:
      - mosaicstack-internal
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - POSTGRES_MULTIPLE_DATABASES=gitea_prod
    volumes:
      - /opt/mosaic/postgres/data:/var/lib/postgresql/data
      - ./scripts/init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for Gitea cache and sessions
  redis:
    image: redis:8.0.3-alpine
    container_name: mosaicstack-redis-gitea
    restart: unless-stopped
    networks:
      - mosaicstack-internal
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - /opt/mosaic/redis/data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Gitea Git Service
  gitea:
    image: gitea/gitea:1.22.6
    container_name: mosaicstack-gitea
    restart: unless-stopped
    networks:
      - mosaicstack-internal
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Basic Configuration
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__DEFAULT__APP_NAME=Mosaic Git
      
      # Database Configuration
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=postgres:5432
      - GITEA__database__NAME=gitea_prod
      - GITEA__database__USER=postgres
      - GITEA__database__PASSWD=${POSTGRES_PASSWORD}
      
      # Redis Configuration
      - GITEA__cache__ENABLED=true
      - GITEA__cache__ADAPTER=redis
      - GITEA__cache__HOST=redis://:${REDIS_PASSWORD}@redis:6379/0
      - GITEA__session__PROVIDER=redis
      - GITEA__session__PROVIDER_CONFIG=redis://:${REDIS_PASSWORD}@redis:6379/1
      
      # Server Configuration
      - GITEA__server__DOMAIN=${GITEA_DOMAIN:-git.mosaicstack.dev}
      - GITEA__server__SSH_DOMAIN=${GITEA_DOMAIN:-git.mosaicstack.dev}
      - GITEA__server__ROOT_URL=https://${GITEA_DOMAIN:-git.mosaicstack.dev}/
      - GITEA__server__SSH_PORT=2222
      - GITEA__server__SSH_LISTEN_PORT=22
      - GITEA__server__LFS_START_SERVER=true
      
      # Security Configuration
      - GITEA__security__SECRET_KEY=${GITEA_SECRET_KEY}
      - GITEA__security__INTERNAL_TOKEN=${GITEA_INTERNAL_TOKEN}
      - GITEA__security__INSTALL_LOCK=${GITEA_INSTALL_LOCK:-false}
      
      # Service Configuration
      - GITEA__service__DISABLE_REGISTRATION=${GITEA_DISABLE_REGISTRATION:-false}
      - GITEA__service__REQUIRE_SIGNIN_VIEW=${GITEA_REQUIRE_SIGNIN:-false}
      - GITEA__service__ENABLE_NOTIFY_MAIL=false
      
      # Webhook Configuration (for GitHub sync)
      - GITEA__webhook__DELIVER_TIMEOUT=30
      - GITEA__webhook__SKIP_TLS_VERIFY=false
      
      # Repository Configuration
      - GITEA__repository__DEFAULT_BRANCH=main
      
      # Log Configuration
      - GITEA__log__LEVEL=Info
      
    volumes:
      - /opt/mosaic/gitea/data:/data
      - /opt/mosaic/gitea/config:/etc/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"     # HTTP Web UI
      - "2222:22"       # SSH Git Access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"